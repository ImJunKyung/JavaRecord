public class Type {
    /*
    
    개발자는 변수 선언을 통해 특정한 값을 변수에 저장하게 된다.
    변수의 종류에는 기본 자료형과 참조형 변수가 있다.

    오늘은 기본 자료형 변수에 대해 공부한다.

    # 기본 자료형의 종류

    기본 자료형의 종류는 아래와 같다.
    - 정수형 : byte / short / int / long
    - 문자형(정수 타입에 속함) : char
    - 실수형 : float / double
    - 논리형 : boolean

    들어가기 앞서...

    데이터의 최소 단위는 1bit이다.
    8bit는 1byte와 같고, 고로 1byte의 메모리 크기를 지닌다는 말은
    2진법으로 8개의 칸만(8bit)을 채워 활용할 수 있음을 의미하게 된다.
    최상위 bit는 부호 bit로 사용된다 (양수는 0, 음수는 1)

    */

    // 1. 정수형
    // 정수값만을 저장하는 타입들이다.
    // 정수를 저장한다는 개념은 모두 같으나, 타입들의 저장 가능 범위가 다르다.
    // byte < short < int < long (순으로 크기가 커진다.)

    byte b = 127; // 1byte
    short s = 32767; // 2byte
    int i = 2147483647; // 4byte
    long l = 9223372036854775807L; // 8byte L을 입력하지 않으면 컴파일러가 int로 처리하려고 하기 때문에 유의하여야 한다.

    // 각각의 타입이 지니는 메모리 크기가 다르고 그에 따라 범위의 스케일 또한 다르다는 것을 인지하고
    // 그에 맞게 유의하여 사용하면 된다.

    // 2. 문자형
    // char타입은 문자 하나를 (') 작은따옴표로 감싸 할당할 수 있다.
    // 이때 저장되는 값은 문자 그대로가 저장되는 것이 아니라. 문자에 맞는 유니코드로 저장되게 된다.
    // (유니코드란? : 세계 각국의 문자를 0 ~ 65535 숫자로 매핑한 국제 표준 규약)

    char A = 'A'; // 2byte / 할당되는 값의 범위 : 0 ~ 65535
    int unicode = A;
    // char A = 65; : 위와 같은 결과.

    // 즉, char 타입 변수에는 문자에 맞는 유니코드 정수값을 할당하고 있기 때문에
    // char는 엄연히 정수형 타입에 속해있는 것이다. (0 ~ 65535 의 범위를 지니는 char 타입은 음수 영역이 없다.)
    // 그렇기에 작은 따옴표 안에 'A' 를 적는 것과 A의 유니코드 '65' 를 적는 것은 호출 시 같은 결과값이다.

    // 3. 실수형
    /*

    실수를 저장 가능한 2개의 타입들이다 부동 소수점형이라고도 한다.
    타입별로 저장 가능 범위가 다르고 정수형과의 차이점은 정수와 실수 모두를 저장할 수 있다.
    마찬가지로 float < double 순으로 범위의 크기가 다르다

    실수형 타입일지라도 정수값을 저장할 수는 있으나, 값을 다시 불러오게 되면 실수형으로 표현된다.

    그리고 실수형 타입은 "float"의 경우 정수형 "long" 과 유사하게
    별도 f또는 F 표기를 하지 않으면 double타입으로 컴파일 처리를 시도하기 때문에
    float 타입의 경우 기입한 값의 뒤에 f를 함께 명시하여야 한다.

    <실수형에 대한 자세한 설명은 README.md에 남긴다.>

    */

    float f = 1.2131244f;
    double d = 1.2348723947923405;

    // 4. 논리형
    // 논리형 타입(boolean)에는 참을 의미하는 "true" 와, 거짓을 의미하는 "false"로 이루어져 있다.
    // 표면상의 메모리 크기는 1bit이나, Java는 메모리를 바이트 단위로 조작하므로,
    // boolean 값을 저장할 때는 보통 1바이트가 사용됨.

    boolean yes = true;
    boolean no = false;
    
    // 이 변수는 주로, 여러 결과값을 최종적으로 두 가지 결과로 정의하거나
    // 두 가지 상태값을 저장할 필요가 있을 경우에 사용된다.

    // 또한 boolean 타입은 상태값에 따라,
    // 추후 공부할 조건문과 제어문의 실행 흐름을 변경 및 결정함에도 상당히 많이 사용되는 타입이다.

    // boolean 타입은 비교 연산자와 논리 연산자를 함께 사용해 로직을 구현하는 경우가 많다.
    // boolean 타입의 다재다능한 사용을 위해서는 비교와 논리 연산자에 대한 일정 수준의 이해도가 동반되면 좋다.

    // 번외. 문자열을 담는 String
    String str = "안녕하세요 제 이름은 임준경입니다, 자바 공부를 시작했습니다.";

    /*
    
    String 타입은 char와 달리 문자 하나가 아닌 문자열 자체를 할당할 수 있다.
    그러나 String 타입은 자료형이 아니라 참조형에 속한다 하지만 주로 기본형처럼 사용되는 경우가 잦다
    
    또한 불변(immutable) 객체인데, String 클래스에는 값을 변경해주는 메소드들이 존재하지만,
    해당 메소드를 통해 데이터를 변경한다면 새로운 String 클래스 객체를 만들어내는 것일 뿐이다.
    클래스이기 때문에 선언 시 첫 글자를 대문자로 선언하는 것을 보면 기본 자료형과는 다르다는 것을 알 수 있다.

    일단 기본 자료형 타입에 속하는 타입이 아니란 걸 알아두고 넘어가자.
    
     */
}
